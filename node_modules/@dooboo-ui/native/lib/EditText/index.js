var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
import { Platform, } from 'react-native';
import React, { useState } from 'react';
import styled from 'styled-components/native';
var Container = styled.View(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  flex-direction: column;\n  align-self: stretch;\n  width: 100%;\n"], ["\n  flex-direction: column;\n  align-self: stretch;\n  width: 100%;\n"])));
var UnderLine = styled.View(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n  border: 0.6px solid #eaeaf9;\n"], ["\n  border: 0.6px solid #eaeaf9;\n"])));
var Title = styled.Text(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\n  font-size: 14px;\n  font-weight: 500;\n  color: #b9b9c4;\n"], ["\n  font-size: 14px;\n  font-weight: 500;\n  color: #b9b9c4;\n"])));
var StyledTextInput = Platform.select({
    ios: styled.TextInput(templateObject_4 || (templateObject_4 = __makeTemplateObject(["\n    padding: 15px 0 10px 0;\n    font-size: 15px;\n    font-weight: 500;\n    color: #2c374e;\n  "], ["\n    padding: 15px 0 10px 0;\n    font-size: 15px;\n    font-weight: 500;\n    color: #2c374e;\n  "]))),
    android: styled.TextInput(templateObject_5 || (templateObject_5 = __makeTemplateObject(["\n    padding-left: 0px;\n    padding-bottom: 5px;\n    font-size: 15px;\n    font-weight: 500;\n    color: #2c374e;\n  "], ["\n    padding-left: 0px;\n    padding-bottom: 5px;\n    font-size: 15px;\n    font-weight: 500;\n    color: #2c374e;\n  "]))),
});
var StyledInvalidText = styled.Text(templateObject_6 || (templateObject_6 = __makeTemplateObject(["\n  font-size: 12px;\n  font-weight: 500;\n  margin-top: 5px;\n  color: #ff8989;\n"], ["\n  font-size: 12px;\n  font-weight: 500;\n  margin-top: 5px;\n  color: #ff8989;\n"])));
function EditText(props) {
    var _a = useState(false), focused = _a[0], setFocus = _a[1];
    var testID = props.testID, errorTestID = props.errorTestID, style = props.style, underlineStyle = props.underlineStyle, label = props.label, textStyle = props.textStyle, labelTextStyle = props.labelTextStyle, errorTextStyle = props.errorTextStyle, errorText = props.errorText, value = props.value, placeholder = props.placeholder, placeholderTextColor = props.placeholderTextColor, secureTextEntry = props.secureTextEntry, onChangeText = props.onChangeText, onSubmitEditing = props.onSubmitEditing, focusColor = props.focusColor, errorColor = props.errorColor;
    return (<Container style={style}>
      <Title style={[
        // prettier-ignore
        focused
            ? { color: focusColor }
            : errorText
                ? { color: errorColor }
                : null,
        labelTextStyle,
    ]}>
        {label}
      </Title>
      <StyledTextInput testID={testID} autoCapitalize={'none'} onFocus={function () { return setFocus(true); }} onBlur={function () { return setFocus(false); }} placeholder={placeholder} placeholderTextColor={placeholderTextColor} value={value} style={textStyle} onChangeText={onChangeText} secureTextEntry={secureTextEntry} onSubmitEditing={onSubmitEditing}></StyledTextInput>
      <UnderLine style={[
        // prettier-ignore
        focused
            ? { borderColor: focusColor }
            : errorText
                ? { borderColor: errorColor }
                : null,
        underlineStyle,
    ]}/>
      {errorText ? (<StyledInvalidText testID={errorTestID} style={[
        {
            color: errorColor,
        },
        errorTextStyle,
    ]}>
          {' '}
          {errorText}{' '}
        </StyledInvalidText>) : null}
    </Container>);
}
EditText.defaultProps = {
    focusColor: '#79B3F5',
    errorColor: '#FF8989',
};
export default EditText;
var templateObject_1, templateObject_2, templateObject_3, templateObject_4, templateObject_5, templateObject_6;
