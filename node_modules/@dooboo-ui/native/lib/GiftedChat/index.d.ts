import { ListRenderItem } from 'react-native';
import React from 'react';
interface Props {
    inputTestID?: string;
    touchTestID?: string;
    chats?: any;
    borderColor?: string;
    backgroundColor?: string;
    fontColor?: string;
    keyboardOffset?: number;
    renderItem: ListRenderItem<any>;
    optionView?: React.ReactElement;
    emptyItem?: React.ReactElement;
    renderViewMenu?: () => React.ReactElement;
    message?: string;
    onChangeMessage?: (text: string) => void;
    placeholder?: string;
    placeholderTextColor?: string;
    renderSendButton?: () => React.ReactElement;
}
declare function Shared(props: Props): React.ReactElement;
declare namespace Shared {
    var defaultProps: {
        chats: any[];
        keyboardOffset: number;
        optionView: JSX.Element;
        emptyItem: JSX.Element;
        renderItem: () => React.ReactElement<any, string | ((props: any) => React.ReactElement<any, string | any | (new (props: any) => React.Component<any, any, any>)>) | (new (props: any) => React.Component<any, any, any>)>;
        renderViewMenu: () => React.ReactElement<any, string | ((props: any) => React.ReactElement<any, string | any | (new (props: any) => React.Component<any, any, any>)>) | (new (props: any) => React.Component<any, any, any>)>;
        message: string;
        onChangeMessage: () => void;
        placeholder: string;
        renderSendButton: () => React.ReactElement<any, string | ((props: any) => React.ReactElement<any, string | any | (new (props: any) => React.Component<any, any, any>)>) | (new (props: any) => React.Component<any, any, any>)>;
    };
}
export default Shared;
